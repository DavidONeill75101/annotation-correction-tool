// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id                    Int               @id @default(autoincrement())
  email                 String            @unique
  upvoted_sentences     UserUpvote[]  
  downvoted_sentences   UserDownvote[]
  @@map("users")
}


model UserUpvote {
  sentence         Sentence    @relation(fields: [sentenceId], references: [id])
  sentenceId       Int         @map("sentence_id")
  user             User        @relation(fields: [userId], references: [id])
  userId           Int         @map("user_id")
  
  @@id([sentenceId, userId])
  @@map("user_upvote")
}


model UserDownvote {
  sentence         Sentence    @relation(fields: [sentenceId], references: [id])
  sentenceId       Int         @map("sentence_id")
  user             User        @relation(fields: [userId], references: [id])
  userId           Int         @map("user_id")
  
  @@id([sentenceId, userId])
  @@map("user_downvote")
}


model Sentence {
  id              Int               @id @default(autoincrement())
  matching_id     String
  pmid            Int
  title           String
  journal         String
  year            Int
  month           String
  day             Int
  section         String
  subsection      String
  evidencetype    String
  cancer          String
  gene            String
  drug            String
  variant_group   String
  sentence        String
  formatted       String
  user_upvotes    UserUpvote[]
  user_downvotes  UserDownvote[]

  @@map("sentences")
}


model relation {
  id             Int    @id @default(autoincrement())
  matching_id    String
  evidencetype   String
  gene           String
  cancer         String
  drug           String
  variant_group  String
  citation_count Int
}


model AnnotatedSentence {
  id                 Int                  @id @default(autoincrement())
  text               String
  entityAnnotations  EntityAnnotation[]
  relationAnnotation RelationAnnotation[]
}


model EntityAnnotation {
  id                   Int                 @id @default(autoincrement())
  entityType           EntityType          @relation(fields: [entityTypeId], references: [id])
  start                Int
  offset               Int
  AnnotatedSentence    AnnotatedSentence?  @relation(fields: [annotatedSentenceId], references: [id])
  annotatedSentenceId  Int?
  RelationAnnotation   RelationAnnotation? @relation(fields: [relationAnnotationId], references: [id])
  relationAnnotationId Int?
  entityTypeId         Int
}


model EntityType {
  id               Int                @id @default(autoincrement())
  name             String
  EntityAnnotation EntityAnnotation[]
}


model RelationAnnotation {
  id                  Int                @id @default(autoincrement())
  relationType        RelationType       @relation(fields: [relationTypeId], references: [id])
  entityAnnotations   EntityAnnotation[]
  AnnotatedSentence   AnnotatedSentence? @relation(fields: [annotatedSentenceId], references: [id])
  annotatedSentenceId Int?
  relationTypeId      Int
}


model RelationType {
  id                 Int                  @id @default(autoincrement())
  name               String
  RelationAnnotation RelationAnnotation[]
}
